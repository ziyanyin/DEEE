#### PCA
#' @include AA_sampleVectorClass.R
NULL

#' Produce a PCA object.
#'
#' This function defines and produces a PCA object.
#'
#' @param dataset A sampleVector object containing data and other information.
#' @param degree Scaling will be used in pca?
#' @return A PCA object.
#' @examples
#' data(GCwPADataA)
#' testset = sampleVector(GCwPADataA, selCol = list(1:5, 11:15, 21:25), labels = c("E", "R", "T"), dataType = "Example")
#' plot(pca1, mainPar = list(labels = "Example")))
#' @export
PCA = function(tt = dataset, scale = F) {
    if(!is(tt, "sampleVector")) stop("Invalid dataset input")
	X = tt$data
	fit = prcomp(t(X), scale = scale)
	pcx1 = t(X)%*%fit$rotation[,1]
	pcx2 = t(X)%*%fit$rotation[,2]
	res = list(pcx1 = pcx1, pcx2 = pcx2, colInd = tt$colInd, labels = tt$labels, dataType = tt$dataType, nGroup = tt$nGroup)
	class(res) = "PCA"

	return(res)
}

#' Print methods of class PCA
#'
#' @param obj A PCA object.
#' @export
print.sampleVector = function(obj)
{
    cat("This is a PCA object\n")
    cat("Sample: ", obj$dataType, ". Group Labels:", paste0(obj$labels, ", "), ".\n")
    cat(paste0("Group size: ", length(obj$selCol), ". Total Columns: ", obj$nCol, ". Number of Rows: ", obj$nRow, ".\n"))
}

#' The plot method for a PCA object.
#'
#' @param obj A PCA object.
#' @param mainPar A list specifying the main title.
#' @param graPar A list of global graphics parameters.
#' @param pcaPar A list of parameters adjusting the points.
#' @return NULL
#' @examples
#' data(GCwPADataA)
#' testset = sampleVector(GCwPADataA, selCol = list(1:5, 11:15, 21:25), labels = c("E", "R", "T"))
#' pca1 = PCA(testset)
#' plot(pca1, mainPar = list(labels = "Example")))
#' @export
plot.PCA = function(obj, mainPar = list(), graPar = list(), pcaPar = list()) {
	plot(1, 1, type = "n", axes = FALSE, xlab = "", ylab = "")
	do.call("text", paraMerge(list(x = 0.985, y = 1.5, labels = "PCA and KDE, Pool D", font = 2, cex = 2.5, xpd = NA), mainPar))

	parDe = par(graPar)
	on.exit(par(parDe))

	par(new = TRUE, fig = c(0, 0.5, 0, 1))
	plot(pcx1, pcx2, pch = " ", main = "", xlab = "", ylab = "")
	do.call("text", paraMerge(list(pcx1, pcx2, label = rep(1:obj$nGroup, sapply(obj$colInd, length)), col = rep(1:obj$nGroup, sapply(obj$colInd, length)), cex = 2), pcaPar))
	invisible()
}
